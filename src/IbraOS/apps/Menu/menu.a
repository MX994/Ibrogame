.include "lib/rasm.inc"

_entry:
    @ Set text size to a reasonable size.
    moveri 0, 2
    syscall 15

    @ Set text color to white.
    moveri 0, 0xFFFF
    syscall 16

    @ SD file list.
    moveri 0, 256
    syscall 13
    moverr 5, 0

    @ Print SD filenames.
    ldstring 0, /
    moverr 1, 5
    syscall 11
    moverr 7, 0 @ Number of files

    @ ">" character buffer.
    moveri 0, 2
    syscall 13
    moverr 10, 0 
    strbi 10, 62, 0 @ >
    strbi 10, 20, 1 @ >

    @ Testing this call shit lmao
_entry_loop:
    call screen_update @ Print all files & selection to screen
_inp_loop:
    call get_joystick_input
    cjump 1, _entry_loop
    jump _inp_loop
    ret

get_joystick_input:
    syscall 4 @ Get Joystick Y
    cmpri 0, GT, 700 @ Is Joystick Pressed Up?
    cjump 1, move_cursor_up

    cmpri 0, LT, 300 @ Is Joystick Pressed Down?
    cjump 1, move_cursor_down

    syscall 5 @ Get Joystick SW Pressed
    cmpri 0, 1 @ Is Joystick SW Pressed
    jump _exit_joystick_inp

move_cursor_up:
    addri 11, 1
    jump _exit_joystick_inp
move_cursor_down:
    subri 11, 1
    jump _exit_joystick_inp
_exit_joystick_inp:    
    ret

screen_update:
    moverr 0, 5 @ SD File List
    moveri 8, 0 @ Loop Variable
loop:
    cmprr 8, EQ, 11 @ Check if currently selected
    ccall 1, print_sel_char
    moveri 1, 1 @ Print Newline
    syscall 0 @ Print Current String

    moverr 9, 0 @ Copy Current Pointer
    syscall 12 @ String Length of current pointer

    addrr 9, 0 @ Add string length to current pointer
    addri 9, 1 @ Skip null terminator
    addri 8, 1 @ Increment Loop Counter
    moverr 0, 9 @ Update Current Pointer

    cmprr 7, GT, 8 @ Check if we printed all strings
    cjump 1, loop @ If not then print the current pointer
    ret

print_sel_char:
    moveri 1, 0 @ Print no newline
    moverr 0, 10 @ Char
    syscall 0
    moverr 0, 9
    ret
    
